# SPDX-FileCopyrightText: 2022-2023 Daniel Valcour <fosssweeper@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

#
# Copyright (c) 2022-2023 Daniel Valcour
#
# This file is part of FossSweeper.
#
# FossSweeper is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# FossSweeper is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with FossSweeper. If not, see <https://www.gnu.org/licenses/>.
#

#Compile automatic tests and run them, outputting errors

name: Tests
on: [push, workflow_dispatch]
jobs:
  build:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - {
              Name: Windows VS2022-2023,
              os: windows-2022-2023,
              cc: gcc,
              cxx: g++,
              arch: "x64-windows",
            }
          - {
              Name: Linux GCC,
              os: ubuntu-22.04,
              cc: gcc-10,
              cxx: g++-10,
              arch: "x64-linux",
            }
          - {
              Name: Linux Clang,
              os: ubuntu-22.04,
              cc: clang-12,
              cxx: clang++-12,
              arch: "x64-linux",
            }
          - {
              Name: MacOS Clang,
              os: macos-12,
              cc: clang,
              cxx: clang++,
              arch: "x64-osx",
            }
        build_type: [Release]
    env:
      buildDir: '${{ github.workspace }}\build'
      CC: ${{ matrix.platform.cc }}
      CXX: ${{ matrix.platform.cxx }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Update and install MacOS packages
        if: ${{ runner.os == 'macOS'}}
        run: |
          softwareupdate --install -a
          brew install ninja
      - name: Update and install Ubuntu packages
        if: ${{ runner.os == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt install libxinerama-dev libxcursor-dev xorg-dev libgtk-3-dev ninja-build
      - name: Log Ninja version on non-Windows platforms
        if: ${{ runner.os != 'Windows' }}
        shell: bash
        run: ninja --version
      - name: Log CMake version
        shell: bash
        run: cmake --version
      - name: Generate CMake project on non-Windows platforms
        if: ${{ runner.os != 'Windows' }}
        shell: bash
        working-directory: ${{ github.workspace }}
        run: cmake -S . -B ./build/ -G Ninja
      - name: Generate CMake project on Windows
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        working-directory: ${{ github.workspace }}
        run: cmake -S . -B ./build/
      - name: Build CMake project
        shell: bash
        working-directory: ${{github.workspace}}
        run: cmake --build $GITHUB_WORKSPACE/build --config ${{ matrix.build_type }}
      - name: Run auto tests
        shell: bash
        working-directory: ${{github.workspace}}/build/modules/test/
        run: ctest -C ${{ matrix.build_type }}
        continue-on-error: true
      - name: Process JUnit report
        uses: mikepenz/action-junit-report@v2.4.3
        with:
          report_paths: "**/unittests.*.xml"
          require_tests: true
          fail_on_failure: true
